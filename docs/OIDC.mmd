flowchart TD
  %% =========================
  %% STYLES / CLASSES
  %% =========================
  classDef edge      fill:#0b3d91,stroke:#0b3d91,color:#fff
  classDef gate      fill:#e8f0fe,stroke:#5f86ff,color:#111
  classDef svc       fill:#fff,stroke:#777,color:#111
  classDef policy    fill:#fff7e6,stroke:#ffb84d,color:#111
  classDef store     fill:#f2fff2,stroke:#8bc34a,color:#111
  classDef cloud     fill:#eefaff,stroke:#58b7ff,color:#111
  classDef term      fill:#fef2f2,stroke:#e57373,color:#111
  classDef ok        fill:#e8f5e9,stroke:#66bb6a,color:#111

  %% =========================
  %% SUBGRAPHS (LOCAL PC vs CLOUD)
  %% =========================
  subgraph LOCAL["Local PC - Zero-Trust Gateway"]
    direction TB

    C[/"Client\n(Browser, CLI, Postman)"/]:::svc

    N[["NGINX Gateway\n• TLS 1.2/1.3 termination\n• mTLS client cert check\n• WAF / rate limit / CORS\n• auth_request → oauth2-proxy"]]:::edge

    O2P[["oauth2-proxy\n• OIDC with Azure Entra ID\n• Session cookie mgmt\n• Returns X-Auth headers"]]:::gate

    PF[["Prompt/Policy Filter (optional)\n• PII/jailbreak checks\n• Size & tenant policy"]]:::policy

    OLL["Ollama (LLM runtime)\n• /api/generate, /api/tags\n• Internal-only (no host port)"]:::svc

    LOG[/"Local SIEM / Logs\n• Access, auth, policy, runtime"/]:::store
  end

  subgraph CLOUD["Azure Entra ID (Cloud)"]
    direction TB
    ENTRA[("Azure Entra ID (OIDC)\n• /authorize\n• /token\n• /.well-known/openid-configuration")]:::cloud
  end

  %% =========================
  %% FLOW: REQUEST → MTLS → OIDC → POLICY → OLLAMA
  %% =========================
  C -->|1) HTTPS → https://localhost/api/*| N

  %% ---- mTLS Gate
  N --> K1{Client mTLS valid?}
  class K1 gate
  K1 -- "No / Missing cert" --> R401[/"401/403\nBlock at edge\n(TLS policy)"/]:::term
  R401 -.-> LOG
  K1 -- "Yes" --> N2[["mTLS OK → Continue"]]:::ok
  N2 -. Access log .-> LOG

  %% ---- OIDC auth_request to oauth2-proxy
  N -->|2) auth_request\n/oauth2/auth| O2P
  O2P --> K2{Valid OIDC session?}
  class K2 gate

  %% ---- No session → interactive login
  K2 -- "No" --> N3["302 → /oauth2/start"]:::gate
  N3 --> C
  C -->|3) Redirect| O2P
  O2P -->|4) 302 → Entra /authorize (PKCE)| C
  C --> ENTRA
  ENTRA -->|5) User login + MFA| C
  C -->|6) Redirect → /oauth2/callback?code=...| O2P
  O2P -->|7) Exchange code → tokens\nSet secure session cookie| C
  C -->|8) Retry original /api/*| N
  N -->|auth_request| O2P
  O2P -->|200 OK + X-Auth headers\n(user, email, groups)| N

  %% ---- Session already valid
  K2 -- "Yes" --> O2P -->|200 OK + X-Auth headers| N
  N -. Auth decision log .-> LOG

  %% ---- Optional Policy/Prompt Filter
  N --> K3{Policy filter enabled?}:::gate
  K3 -- "Yes" --> N -->|9) /filter\n(prompt, user, meta)| PF
  PF --> K4{Policy pass?}:::gate
  K4 -- "No" --> R406[/"406/422\nBlocked by policy"/]:::term
  R406 -.-> LOG
  K4 -- "Yes" --> N
  K3 -- "No" --> N

  %% ---- Proxy to Ollama
  N -->|10) Proxy /api/generate\n(add X-User/X-Groups,\nstrip cookies, set timeouts)| OLL
  OLL -->|11) Stream tokens / response| N
  N -->|12) Return 200 OK (stream)| C

  %% ---- Logging
  N -. Access & security logs .-> LOG
  O2P -. Auth logs .-> LOG
  PF -. Policy logs .-> LOG
  OLL -. Inference metrics .-> LOG

  %% =========================
  %% ERROR / EDGE CASES (Azure-specific)
  %% =========================
  subgraph ERRORS["Common Azure OIDC Issues"]
    direction TB
    E1["AADSTS50011:\nRedirect URI mismatch"]:::term
    E2["Issuer mismatch:\nOIDC_ISSUER_URL vs discovery"]:::term
    E3["Invalid client secret\n(AADSTS7000215)"]:::term
    E4["Missing scopes/consent:\nopenid profile email"]:::term
  end

  %% References from oauth2-proxy auth path
  O2P -. if discovery fails → .-> E2
  O2P -. if redirect mismatch → .-> E1
  O2P -. if secret invalid → .-> E3
  O2P -. if scopes missing → .-> E4
